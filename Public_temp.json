{
  "name": "Public temp",
  "nodes": [
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1BryJkIyueWmVyijkfqJgHGyj5SnvB2UExxtp5j4tgS0",
          "mode": "list",
          "cachedResultName": "Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1BryJkIyueWmVyijkfqJgHGyj5SnvB2UExxtp5j4tgS0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1BryJkIyueWmVyijkfqJgHGyj5SnvB2UExxtp5j4tgS0/edit#gid=0"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "first_name"
          ],
          "schema": [
            {
              "id": "first_name",
              "displayName": "first_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_name",
              "displayName": "last_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "company",
              "displayName": "company",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "linkedin",
              "displayName": "linkedin",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "domain",
              "displayName": "domain",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1000,
        -520
      ],
      "id": "052f023c-32b5-48e9-a830-82671767f8f7",
      "name": "Add to Google Sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "UwSNjez4rmJep3KL",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the array of contacts from your input\nconst contacts = $input.first().json.contacts\n\nconst transformedItems = [];\n\nfor (const contact of contacts) {\n  if (!contact.name) continue;\n\n  const nameParts = contact.name.trim().split(/\\s+/);\n  const first_name = nameParts[0] || \"\";\n  const last_name = nameParts.slice(1).join(\" \") || \"\"; // Handles cases with middle names\n\n  transformedItems.push({\n    json: {\n      first_name,\n      last_name,\n      title: contact.title || \"\",\n      company: contact.company || \"\",\n      linkedin: contact.linkedin || \"\"\n    }\n  });\n}\n\nreturn transformedItems;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        780,
        -520
      ],
      "id": "8076fb43-8cca-40e8-af10-cb855b16611b",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:3000/api/scrape",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "google-email"
            },
            {
              "name": "google-password"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "searchUrl",
              "value": "={{ $json.message.content.searchUrl }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        600,
        -520
      ],
      "id": "49421373-f7a6-4714-a9c2-1a7aee7655b7",
      "name": "Acquire Leads"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1140,
        -720
      ],
      "id": "7fb21ef3-b21f-46e9-92e2-1c56a500c241",
      "name": "Return Leads"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "3ee91cf8-37c2-4074-9f5d-82876c748d96",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        40,
        -700
      ],
      "id": "7921f7a9-81a5-47cc-bae7-01330015d926",
      "name": "Submit Audience",
      "webhookId": "3ee91cf8-37c2-4074-9f5d-82876c748d96"
    },
    {
      "parameters": {
        "content": "## If you want to connect the front end\nUse https://github.com/JKHellNo/audience-alchemy-connect",
        "height": 140,
        "width": 440
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -120,
        -880
      ],
      "id": "f05386c7-88c9-4c8f-a8e4-7a2dd556c0bb",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "formTitle": "LinkedIn Lead Outreach Trigger",
        "formDescription": "Insert an audience for your LinkedIn Outreach Campaign here.",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Describe your audience in plain English.",
              "fieldType": "textarea",
              "placeholder": "Company type, location, etc",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        40,
        -520
      ],
      "id": "a2bcac8c-c511-43a0-a212-54f5dfcda595",
      "name": "On form submission",
      "webhookId": "ecb5116a-1434-45b5-8f38-31393735a1b8"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/jljBwyyQakqrL1wae/run-sync-get-dataset-items",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer apify_api_49eEwZq5l183z71vAk5X9vij6A2uaZ0mxTAK"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"getPersonalEmails\": true,\n    \"getWorkEmails\": true,\n    \"totalRecords\": 500,\n    \"url\": \"{{ $json.message.content.searchUrl }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        620,
        -900
      ],
      "id": "747d2271-ae4f-47e3-9cd5-379317f1d62c",
      "name": "Run Apify Actor & Get Results"
    },
    {
      "parameters": {
        "maxItems": 3
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        60,
        -240
      ],
      "id": "c59cc274-2cc8-45a5-a42f-d37f0e86bbb6",
      "name": "Limit"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.phantombuster.com/api/v2/agents/launch",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Phantombuster-Key",
              "value": "mGBCk0W7hbnK6v58FpI2MSttntCpFqjS9Pp1xHZrRZM"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "id",
              "value": "4108795702201397"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        960,
        -240
      ],
      "id": "5fc6a5ea-5629-4f14-930e-a4a4d84d8a27",
      "name": "Trigger PhantomBuster Agent"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "You are a helpful, intelligent writing assistant.",
              "role": "system"
            },
            {
              "content": "Your task is to take as input a bunch of LinkedIn profile information of a user, and then generate a very short, very punchy icebreaker that I can use as a variable in my connection request.\n\nReturn your results in this format:\n\n{\"icebreaker\":\"Icebreaker goes here\"}\n\nIn order to ensure icebreakers are punchy and high-quality, make them follow this template:\n\nHey {{name}}, loved seeing {{thingAboutThem}}. I'm also into {{plausibleTieIn}}, thought I'd connect.\n\nFor {{thingAboutThem}} and {{plausibleTieIn}}, never use the exact information provided in a LinkedIn field. Instead, always paraphrase. This makes it seem human written, instead of just an automated message. Also, make it super short. Don't say stuff like \"passionate about turning vision into reality\" or anything like that—be extremely laconic and spartan."
            },
            {
              "content": "{\"linkedInFields\":\"Danielle Morgan, Fort Lauderdale, Founder & CEO at DM Creative Agency, previous experience: Regional Sales Director at Out East Eyewear, Account Director at Radancy\"}"
            },
            {
              "content": "{\n  \"icebreaker\": \"Hey Danielle, loved seeing your creative agency journey. I'm also building brands, thought I'd connect.\"\n}",
              "role": "assistant"
            },
            {
              "content": "={\"linkedInFields\":\"{{ $json.first_name }} {{ $json.last_name }}, {{ $json.city }}, {{ $json.title }} at {{ $json.employment_history[0].organization_name }}, previous experience: {{ $json.employment_history[1].title }} at {{ $json.employment_history[1].organization_name }}, {{ $json.employment_history[2].title }} at {{ $json.employment_history[2].organization_name }}\"} "
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        240,
        -240
      ],
      "id": "c35b6300-f0d4-4463-8528-5cb74851f21d",
      "name": "Personalize Outreach",
      "credentials": {
        "openAiApi": {
          "id": "Zmu1dcv6YZgGriL1",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        780,
        -240
      ],
      "id": "02749787-651c-4238-b22d-fb926a7474bf",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.5-preview",
          "mode": "list",
          "cachedResultName": "GPT-4.5-PREVIEW"
        },
        "messages": {
          "values": [
            {
              "content": "You're a helpful, intelligent sales assistant.",
              "role": "system"
            },
            {
              "content": "Your task is to take as input a natural language description of a prospect audience, and turn that into an Apollo Search URL.\n\nHere's an example of an Apollo Search URL:\n\nhttps://app.apollo.io/#/people?personLocations[]=United%20States&sortAscending=false&sortByField=%5Bnone%5D&personTitles[]=owner&personTitles[]=ceo&personTitles[]=founder&personTitles[]=partner&page=1&qKeywords=creative%20agency&organizationNumEmployeesRanges[]=1%2C200\n\nThis URL describes a search for people that are\n- Located in the United States.\n- Hold the titles: Owner, CEO, Founder, or Partner.\n- Have a keyword association with “creative agency”.\n\nThese are the fields you can change:\n\norganizationLocations[], Keywords, personTitles[], and organizationNumEmployeesRanges[]\n\nDo not add or change any other fields. Use the above template\n\nReturn your response in JSON using this format:\n\n{\"searchUrl\":\"search url goes here\"}"
            },
            {
              "content": "={{ $json['Describe your audience in plain English.'] }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        240,
        -520
      ],
      "id": "35560615-96eb-4cfc-99ed-bb334ff69ee2",
      "name": "Generate Search URL1",
      "credentials": {
        "openAiApi": {
          "id": "Zmu1dcv6YZgGriL1",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "12VzSF9drN_kWYsGhNjir9hAGCE0k56N7HkfAV8EuI7Q",
          "mode": "list",
          "cachedResultName": "Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12VzSF9drN_kWYsGhNjir9hAGCE0k56N7HkfAV8EuI7Q/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12VzSF9drN_kWYsGhNjir9hAGCE0k56N7HkfAV8EuI7Q/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Limit').item.json.id }}",
            "first_name": "={{ $('Limit').item.json.first_name }}",
            "last_name": "={{ $('Limit').item.json.last_name }}",
            "name": "={{ $('Limit').item.json.name }}",
            "linkedin_url": "={{ $('Limit').item.json.linkedin_url }}",
            "title": "={{ $('Limit').item.json.title }}",
            "email_status": "={{ $('Limit').item.json.email_status }}",
            "photo_url": "={{ $('Limit').item.json.photo_url }}",
            "icebreaker": "={{ $json.message.content.icebreaker }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "first_name",
              "displayName": "first_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_name",
              "displayName": "last_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "linkedin_url",
              "displayName": "linkedin_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email_status",
              "displayName": "email_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "photo_url",
              "displayName": "photo_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "icebreaker",
              "displayName": "icebreaker",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {
          "useAppend": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        580,
        -240
      ],
      "id": "bd441bd2-fb65-46c1-a3e6-c441c12f5042",
      "name": "Add to Google Sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "UwSNjez4rmJep3KL",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "1c30a428-b259-4e31-aa10-0ba6ad713834",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        180,
        200
      ],
      "id": "360e0ed6-f2b4-434f-8782-6510b25d6045",
      "name": "Email Acquisition",
      "webhookId": "1c30a428-b259-4e31-aa10-0ba6ad713834"
    },
    {
      "parameters": {
        "url": "=https://api.hunter.io/v2/email-finder?company={{ $json.body.company }}&first_name={{ $json.body.first_name }}&last_name={{ $json.body.last_name }}&api_key=",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        380,
        200
      ],
      "id": "ecc726e9-6f24-4764-94b0-bf158a6872e8",
      "name": "Getting Email"
    },
    {
      "parameters": {
        "content": "## Get email button\n",
        "height": 80
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -140,
        220
      ],
      "id": "eb04c004-5e76-4030-8bc4-2e8d53aa0193",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.phantombuster.com/api/v2/agents/launch",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Phantombuster-Key"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "id"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        720,
        920
      ],
      "id": "1ca5f04c-63b6-42f3-82aa-1e68af801f6d",
      "name": "Linkedin Auto Connect",
      "executeOnce": true
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1IOuEeXwBlns7iunXc1J8IKBCS3nrU3FjD8ri-omnn2I",
          "mode": "list",
          "cachedResultName": "Linkedin Connect",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IOuEeXwBlns7iunXc1J8IKBCS3nrU3FjD8ri-omnn2I/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IOuEeXwBlns7iunXc1J8IKBCS3nrU3FjD8ri-omnn2I/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "linkedin": "={{ $json.linkedin_url }}"
          },
          "matchingColumns": [
            "linkedin"
          ],
          "schema": [
            {
              "id": "linkedin",
              "displayName": "linkedin",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "icebreaker",
              "displayName": "icebreaker",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "container_id",
              "displayName": "container_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "first_name",
              "displayName": "first_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_name",
              "displayName": "last_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_org",
              "displayName": "current_org",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_job_title",
              "displayName": "current_job_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "past_org",
              "displayName": "past_org",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "past_title",
              "displayName": "past_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "headers",
              "displayName": "headers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "params",
              "displayName": "params",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "body",
              "displayName": "body",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "webhookUrl",
              "displayName": "webhookUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "executionMode",
              "displayName": "executionMode",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "index",
              "displayName": "index",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logprobs",
              "displayName": "logprobs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "finish_reason",
              "displayName": "finish_reason",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        600,
        400
      ],
      "id": "6ef7a654-5c46-416d-b296-c28bc458d453",
      "name": "Leads to connect",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "UwSNjez4rmJep3KL",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1IOuEeXwBlns7iunXc1J8IKBCS3nrU3FjD8ri-omnn2I",
          "mode": "list",
          "cachedResultName": "Linkedin Connect",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IOuEeXwBlns7iunXc1J8IKBCS3nrU3FjD8ri-omnn2I/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IOuEeXwBlns7iunXc1J8IKBCS3nrU3FjD8ri-omnn2I/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "linkedin": "={{ $json.profileUrl }}",
            "first_name": "={{ $json.firstName }}",
            "last_name": "={{ $json.lastName }}",
            "location": "={{ $json.location }}",
            "current_org": "={{ $json.currentJob.company }}",
            "current_job_title": "={{ $json.currentJob.title }}",
            "past_title": "={{ $json.previousJob.title }}",
            "past_org": "={{ $json.previousJob.company }}"
          },
          "matchingColumns": [
            "linkedin"
          ],
          "schema": [
            {
              "id": "linkedin",
              "displayName": "linkedin",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "icebreaker",
              "displayName": "icebreaker",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "container_id",
              "displayName": "container_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "first_name",
              "displayName": "first_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_name",
              "displayName": "last_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "current_org",
              "displayName": "current_org",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "current_job_title",
              "displayName": "current_job_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "past_org",
              "displayName": "past_org",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "past_title",
              "displayName": "past_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        600,
        640
      ],
      "id": "bba30ccd-52ab-402b-9b48-b6114effac18",
      "name": "Gather personalized info",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "UwSNjez4rmJep3KL",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1IOuEeXwBlns7iunXc1J8IKBCS3nrU3FjD8ri-omnn2I",
          "mode": "list",
          "cachedResultName": "Linkedin Connect",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IOuEeXwBlns7iunXc1J8IKBCS3nrU3FjD8ri-omnn2I/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IOuEeXwBlns7iunXc1J8IKBCS3nrU3FjD8ri-omnn2I/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "icebreaker": "={{ $json.message.content.icebreaker }}",
            "linkedin": "={{ $('Limit1').item.json.linkedin }}"
          },
          "matchingColumns": [
            "linkedin"
          ],
          "schema": [
            {
              "id": "linkedin",
              "displayName": "linkedin",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "icebreaker",
              "displayName": "icebreaker",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "container_id",
              "displayName": "container_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "first_name",
              "displayName": "first_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "last_name",
              "displayName": "last_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_org",
              "displayName": "current_org",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "current_job_title",
              "displayName": "current_job_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "past_org",
              "displayName": "past_org",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "past_title",
              "displayName": "past_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        520,
        920
      ],
      "id": "5acbf12a-f33f-43d8-9d78-eea88d237c2f",
      "name": "Store messages"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.phantombuster.com/api/v2/agents/launch",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Phantombuster-Key"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "id"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        800,
        400
      ],
      "id": "6160bcd0-010c-4cb7-b23d-42a71348bbef",
      "name": "Run Profile Scrapper",
      "executeOnce": true
    },
    {
      "parameters": {
        "url": "https://api.phantombuster.com/api/v2/containers/fetch-result-object",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "id",
              "value": "={{ $json.containerId }}"
            },
            {
              "name": "mode",
              "value": "json"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Phantombuster-Key"
            },
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        160,
        640
      ],
      "id": "c76564ec-9885-4b12-8785-96689b4b0cf1",
      "name": "Retrieve Result"
    },
    {
      "parameters": {
        "content": "## Connect Linkedin Users",
        "height": 80,
        "width": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -180,
        420
      ],
      "id": "e97b08c9-4229-4ffe-8209-36ba4c3d333f",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1000,
        400
      ],
      "id": "c00a95cb-d48b-467e-9fab-b07bdf6e0cde",
      "name": "Wait1",
      "webhookId": "37ba9da8-290f-4ae2-b0b1-55a2b5814e53"
    },
    {
      "parameters": {
        "jsCode": "// Step 1: Parse the stringified JSON array\nconst rawString = $input.first().json.resultObject;\nconst parsedArray = JSON.parse(rawString);\n\n// Step 2: Map each person into an item\nreturn parsedArray.map(input => ({\n  json: {\n    firstName: input.firstName,\n    lastName: input.lastName,\n    fullName: `${input.firstName} ${input.lastName}`,\n        profileUrl: input.linkedinProfileUrl\n      .replace(/^https:/, \"http:\")\n      .replace(/^http:\\/\\/(?!www\\.)/, \"http://www.\"),\n    headline: input.linkedinHeadline,\n    location: input.location,\n    connectionsCount: input.linkedinConnectionsCount,\n    connectionDegree: input.connectionDegree,\n\n    currentJob: {\n      title: input.linkedinJobTitle,\n      company: input.companyName,\n      industry: input.companyIndustry,\n      startDate: input.linkedinJobDateRange,\n      location: input.linkedinJobLocation,\n    },\n\n    previousJob: {\n      title: input.linkedinPreviousJobTitle,\n      company: input.previousCompanyName,\n      startDate: input.linkedinPreviousJobDateRange,\n      location: input.linkedinPreviousJobLocation,\n    },\n\n    education: [\n      {\n        school: input.linkedinSchoolName,\n        degree: input.linkedinSchoolDegree,\n        url: input.linkedinSchoolUrl\n      },\n      {\n        school: input.linkedinPreviousSchoolName,\n        degree: input.linkedinPreviousSchoolDegree,\n        url: input.linkedinPreviousSchoolUrl\n      }\n    ],\n\n    skills: input.linkedinSkillsLabel\n      ? input.linkedinSkillsLabel.split(\",\").map(skill => skill.trim())\n      : [],\n\n    summary: input.linkedinDescription,\n    isHiring: input.linkedinIsHiringBadge,\n    isOpenToWork: input.linkedinIsOpenToWorkBadge,\n    companyLinkedIn: input.linkedinCompanyUrl,\n    mutualConnectionsUrl: input.mutualConnectionsUrl,\n    connectionsUrl: input.connectionsUrl,\n    scrapedAt: input.refreshedAt\n  }\n}));\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        640
      ],
      "id": "c509b114-8a4a-47b3-adb5-37fed7077761",
      "name": "Split each user"
    },
    {
      "parameters": {
        "jsCode": "const urls = $input.first().json.body.linkedin_urls;\n\nreturn urls.map(url => ({\n  json: {\n    linkedin_url: url\n  }\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        400
      ],
      "id": "0493bde2-da94-4359-9455-f50e5d58949f",
      "name": "Process users"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "da70eef2-1a3a-4c96-8af9-d1960e0ee0f5",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        180,
        400
      ],
      "id": "2aacb961-cca4-4181-b0ea-fbc887d4b3c5",
      "name": "Submit Connections",
      "webhookId": "da70eef2-1a3a-4c96-8af9-d1960e0ee0f5",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        560,
        200
      ],
      "id": "e26e709e-553e-4954-b3a5-0afbbdc51218",
      "name": "Domain Email"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "You are a helpful, intelligent writing assistant.",
              "role": "system"
            },
            {
              "content": "Your task is to take as input a bunch of LinkedIn profile information of a user, and then generate a very short, very punchy icebreaker that I can use as a variable in my connection request.\n\nReturn your results in this format:\n\n{\"icebreaker\":\"Icebreaker goes here\"}\n\nIn order to ensure icebreakers are punchy and high-quality, make them follow this template:\n\nHey {{name}}, loved seeing {{thingAboutThem}}. I'm also into {{plausibleTieIn}}, thought I'd connect.\n\nFor {{thingAboutThem}} and {{plausibleTieIn}}, never use the exact information provided in a LinkedIn field. Instead, always paraphrase. This makes it seem human written, instead of just an automated message. Also, make it super short. Don't say stuff like \"passionate about turning vision into reality\" or anything like that—be extremely laconic and spartan."
            },
            {
              "content": "{\"linkedInFields\":\"Danielle Morgan, Fort Lauderdale, Founder & CEO at DM Creative Agency, previous experience: Regional Sales Director at Out East Eyewear, Account Director at Radancy\"}"
            },
            {
              "content": "{\n  \"icebreaker\": \"Hey Danielle, loved seeing your creative agency journey. I'm also building brands, thought I'd connect.\"\n}",
              "role": "assistant"
            },
            {
              "content": "={\"linkedInFields\":\"{{ $json.first_name }} {{ $json.last_name }}, {{ $json.location }}, {{ $json.current_job_title }} at {{ $json.current_org }}, previous experience: {{ $json.past_title }} at {{ $json.past_org }}\"} "
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        140,
        920
      ],
      "id": "05908282-023b-42de-bc71-43b647a87af9",
      "name": "Personalize Outreach1"
    },
    {
      "parameters": {
        "content": "## My frontend features",
        "height": 1140,
        "width": 1460,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        60
      ],
      "id": "424d0726-480e-48c6-ac73-c04f52bad364",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Basic setup",
        "height": 480,
        "width": 1600
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -320,
        -540
      ],
      "id": "1a2179be-1919-4df0-9dfd-6442a77bf36d",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## My free scrapper is at https://github.com/JKHellNo/browser-apollo-scrapper",
        "height": 120,
        "width": 360
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        -700
      ],
      "id": "7edb15d3-a614-49a6-9272-575a67971c8b",
      "name": "Sticky Note5"
    }
  ],
  "pinData": {},
  "connections": {
    "Add to Google Sheet": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Add to Google Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Acquire Leads": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "Generate Search URL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run Apify Actor & Get Results": {
      "main": [
        []
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Personalize Outreach",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Personalize Outreach": {
      "main": [
        [
          {
            "node": "Add to Google Sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Trigger PhantomBuster Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Search URL1": {
      "main": [
        [
          {
            "node": "Acquire Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add to Google Sheet1": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Acquisition": {
      "main": [
        [
          {
            "node": "Getting Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Getting Email": {
      "main": [
        [
          {
            "node": "Domain Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leads to connect": {
      "main": [
        [
          {
            "node": "Run Profile Scrapper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gather personalized info": {
      "main": [
        [
          {
            "node": "Personalize Outreach1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Store messages": {
      "main": [
        [
          {
            "node": "Linkedin Auto Connect",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run Profile Scrapper": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Result": {
      "main": [
        [
          {
            "node": "Split each user",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Retrieve Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split each user": {
      "main": [
        [
          {
            "node": "Gather personalized info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process users": {
      "main": [
        [
          {
            "node": "Leads to connect",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Submit Connections": {
      "main": [
        [
          {
            "node": "Process users",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Personalize Outreach1": {
      "main": [
        [
          {
            "node": "Store messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6304cb21-8a79-443f-aa02-33c08d3af5cb",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "904650dd48298f9ad3da96c3fbccbf962e1b680ad48461cab1570fbeefa07a50"
  },
  "id": "mDxsfWrEt8r0zn4o",
  "tags": [
    {
      "name": "N8N Course",
      "id": "mCS42cGHhUSVXPMt",
      "createdAt": "2025-05-11T21:42:27.237Z",
      "updatedAt": "2025-05-11T21:42:27.237Z"
    }
  ]
}